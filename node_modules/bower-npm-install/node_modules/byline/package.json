{
  "name": "byline",
  "description": "super-simple line-by-line Stream reader",
  "homepage": "https://github.com/jahewson/node-byline",
  "bugs": {
    "url": "https://github.com/jahewson/node-byline/issues"
  },
  "version": "3.1.2",
  "author": {
    "name": "John Hewson"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jahewson/node-byline"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "main": "./lib",
  "dependencies": {
    "readable-stream": "~1.1.9"
  },
  "readme": "# byline -- buffered Stream for reading lines\r\n\r\n`byline` is a super-simple module providing a `LineStream` for [node.js](http://nodejs.org/).\r\n\r\n- node v0.10 `streams2` (transform stream)\r\n- supports `pipe`\r\n- supports both UNIX and Windows line endings\r\n- can wrap any readable stream\r\n- can be used as a readable-writable \"through-stream\" (transform stream)\r\n- super-simple: `stream = byline(stream);`\r\n\r\n## Install\r\n\r\n    npm install byline\r\n\r\nor from source:\r\n\r\n    git clone git://github.com/jahewson/node-byline.git\r\n\tcd node-byline\r\n\tnpm link\r\n\r\n#Convenience API\r\n\r\nThe `byline` module can be used as a function to quickly wrap a readable stream:\r\n\r\n```javascript\r\nvar fs = require('fs'),\r\n    byline = require('byline');\r\n\r\nvar stream = byline(fs.createReadStream('sample.txt'));\r\n```\r\n\r\nThe `data` event then emits lines:\r\n\r\n```javascript\r\nstream.on('data', function(line) {\r\n  console.log(line);\r\n});\r\n```\r\n\r\n#Standard API\r\n    \r\nYou just need to add one line to wrap your readable `Stream` with a `LineStream`.\r\n\r\n```javascript\r\nvar fs = require('fs'),\t\r\n    byline = require('byline');\r\n\r\nvar stream = fs.createReadStream('sample.txt');\r\nstream = byline.createStream(stream);\r\n\r\nstream.on('data', function(line) {\r\n  console.log(line);\r\n});\r\n```\r\n\r\n#Piping\r\n\r\n`byline` supports `pipe` (though it strips the line endings, of course).\r\n\r\n```javascript\r\nvar stream = fs.createReadStream('sample.txt');\r\nstream = byline.createLineStream(stream);\r\nstream.pipe(fs.createWriteStream('nolines.txt'));\r\n```\r\n\r\nAlternatively, you can create a readable/writable \"through-stream\" which doesn't wrap any specific stream:\r\n\r\n```javascript\r\nvar stream = fs.createReadStream('sample.txt');\r\nstream = byline.createLineStream(stream);\r\nstream.pipe(fs.createWriteStream('nolines.txt'));\r\n\t\r\nvar input = fs.createReadStream('LICENSE');\r\nvar lineStream = byline.createStream();\r\ninput.pipe(lineStream);\r\n\r\nvar output = fs.createWriteStream('test.txt');\r\nlineStream.pipe(output);\r\n```\r\n\r\n#Transform Stream\r\n\r\nThe `byline` transform stream can be directly manipulated like so:\r\n\r\n```javascript\r\nvar LineStream = require('byline').LineStream;\r\n\r\nvar input = fs.createReadStream('sample.txt');\r\nvar output = fs.createWriteStream('nolines.txt');\r\n\r\nvar lineStream = new LineStream();\r\ninput.pipe(lineStream);\r\nlineStream.pipe(output);\r\n\r\n```\r\n\r\n#Tests\r\n\r\n    mocha -R spec\r\n\r\n#Simple\r\nUnlike other modules (of which there are many), `byline` contains no:\r\n\r\n- monkeypatching\r\n- dependencies\r\n- non-standard 'line' events which break `pipe`\r\n- limitations to only file streams\r\n- CoffeeScript\r\n- mostly unnecessary code",
  "readmeFilename": "README.md",
  "_id": "byline@3.1.2",
  "dist": {
    "shasum": "940e06e223b07ea48019d5505174a94d0465a9a8"
  },
  "_resolved": "git://github.com/SevInf/node-byline.git#2c546e682d503667ead0001090ecb9f27f62d928",
  "_from": "byline@git://github.com/SevInf/node-byline.git#2c546e682d503667ead0001090ecb9f27f62d928"
}
